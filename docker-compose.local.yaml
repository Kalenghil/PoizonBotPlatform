version: '3.9'

services:
  mongodb:
    image: mongo:latest
    container_name: mongo-db
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
    volumes:
      - mongodb-data:/data/db
    ports:
      - "27017:27017"
    command: ["mongod", "--auth"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      timeout: 20s
      retries: 10
    restart: always

  minio:
    image: minio/minio
    container_name: minio
    env_file:
      - .env
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
    command: server /data
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://localhost:9000/minio/health/live" ]
      timeout: 20s
      retries: 10
    restart: always

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: poizonbot
    env_file:
      - .env
    environment:
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    expose:
      - "8000:8000"
    depends_on:
      minio:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-I", "0.0.0.0:8000"]
      timeout: 30s
      retries: 10
    restart: always

volumes:
  mongodb-data:
  minio-data:
